- content_for :page_class do
  | search-page
.article-container.group.business-support-index.js-filtered-list
  .block-2
    .inner-block
      .filter-block
        h2
          | You can use the filters to only show schemes that you are eligible for
        |  <form method="get" action="
        = request.path
        | " id="document-filter" class="js-filter"> 
        fieldset
          legend.visuallyhidden
            | Filter available support
          #support-filter.filter.filter-inclusive
            h3.title
              | Available support
            |  <% { "finance" => "Finance", "equity" => "Equity", "grant" => "Grants", "loan" => "Loans and guarantees", "expertise-and-advice" => "Expertise and advice", "recognition-award" => "Recognition awards" }.each do |support_type, display_name| %> 
            .filter-inner.checkbox
              |  <label for="
              = support_type
              | ">
              = display_name
              |  <input name="support_types[]" id="
              = support_type
              | " type="checkbox" 
              - if !params["support_types_submitted"] || params["support_types"] && params["support_types"].include?(support_type)
                |  checked="checked" 
              |  value="
              = support_type
              | "> 
            input[name="support_types_submitted" type="hidden" value="true"]
          #location-filter.filter.business-location.filter-exclusive
            .filter-inner
              label[for="select-location"]
                | Business location
              |  <%= select_tag :location, option_groups_from_collection_for_select(@locations, :regions, :name, :slug, :name, params[:location]), :prompt => 'Any location', :id => "select-location", :class => "single-row-select" %> 
          #employee-count-filter.filter.filter-exclusive
            .filter-inner
              label[for="employee-count-option"]
                | Number of employees
              |  <%= select_tag :size, options_from_collection_for_select(@sizes, :slug, :name, params[:size]), :prompt => 'Any number of employees', :id => "employee-count-option", :class => "single-row-select" %> 
          #business-type-filter.filter.filter-exclusive
            .filter-inner
              label[for="business-type-option"]
                | Activity or business type
              |  <%= select_tag :sector, options_from_collection_for_select(@sectors, :slug, :name, params[:sector]), :prompt => 'All activities and business types', :id => "business-type-option", :class => "single-row-select" %> 
          #business-stage-filter.filter.filter-exclusive
            .filter-inner
              label[for="business-stage-option"]
                | Business stage
              |  <%= select_tag :stage, options_from_collection_for_select(@stages, :slug, :name, params[:stage]), :prompt => 'All business stages', :id => "business-stage-option", :class => "single-row-select" %> 
          #filter-submit.filter
            .filter-inner
              .submit
                button.button[name="commit" type="submit"]
                  | Refresh results
  #filtered-results.block-4.filtered-results
    .inner-block
      .filter-results-summary[aria-live="polite" aria-atomic="true"]
        h3
          | Available schemes
          br
          span.results-count
            = @schemes.count
      - if @schemes.count == 0
        .no-matching-schemes
          h2
            | There are no matching schemes.
          p
            | Try making your search broader and try again.
      - else
        ul.results-list
          - @schemes.each do |scheme|
            li.scheme[data-sector="<ruby code=\"= formatted_facet_values(scheme.sectors)\"></ruby>" data-location="<ruby code=\"= formatted_facet_values(scheme.locations)\"></ruby>" data-size="<ruby code=\"= formatted_facet_values(scheme.business_sizes)\"></ruby>" data-types="<ruby code=\"= formatted_facet_values(scheme.support_types)\"></ruby>" data-stage="<ruby code=\"= formatted_facet_values(scheme.stages)\"></ruby>"]
              h3
                | <a href="
                = scheme.web_url
                | ">
                = scheme.title
              p
                = scheme.short_description
